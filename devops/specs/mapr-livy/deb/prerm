#!/bin/bash

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package


before_remove() {
    DAEMON_CONF="__PREFIX__/conf/daemon.conf"
    MAPR_USER=${MAPR_USER:-$([ -f "$DAEMON_CONF" ] && grep "mapr.daemon.user" "$DAEMON_CONF" | cut -d '=' -f 2)}
    MAPR_USER=${MAPR_USER:-"mapr"}

    if [ -z "${MAPR_TICKETFILE_LOCATION}" ] && [ -e "__PREFIX__/conf/mapruserticket" ]; then
        export MAPR_TICKETFILE_LOCATION="__PREFIX__/conf/mapruserticket"
    fi

    if sudo -u $MAPR_USER -E "__INSTALL_3DIGIT__/bin/livy-server" status &>/dev/null; then
        RESULT=$(sudo -u $MAPR_USER -E "__INSTALL_3DIGIT__/bin/livy-server" stop 2>&1)
        STATUS=$?
        if [ $STATUS -ne 0 ] ; then
            echo "$RESULT"
        fi
    fi
}


case "$1" in
    remove|upgrade|deconfigure)
        before_remove
    ;;

    failed-upgrade)
    ;;

    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

exit 0
